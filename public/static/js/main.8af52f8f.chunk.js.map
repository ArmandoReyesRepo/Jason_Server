{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","to","id","width","object","Menu","menu","dishes","map","key","active","About","RenderLeader","left","body","heading","leaders","title","list","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","alert","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","htmlfor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderDish","top","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","outline","isOpen","toggle","value","RenderComments","comments","commentView","c","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","username","password","remember","checked","preventDefault","dark","expand","height","navbar","htmlFor","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","resetFeedback","withRouter","connect","feedbacks","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8af52f8f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner  fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p> Loading ... </p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';\r\n\r\n","import React from 'react';\r\nimport { Card, CardImg,CardText,CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard ({item, isLoading, errMess}) {\r\n    if(isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n        <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <FadeTransform in\r\n                transformProps = {{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src ={baseUrl + item.image} alt ={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle> {item.name} </CardTitle>\r\n                        {item.designation ? <CardSubtitle> {item.designation} </CardSubtitle>:null}\r\n                        <CardText> {item.description} </CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n\r\n        );\r\n}\r\n\r\nfunction Home (props) {\r\n    return (\r\n        <div className= \"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item = {props.dish} \r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item = {props.promotion}\r\n                    isLoading={props.promosLoading}\r\n                    errMess={props.promosErrMess}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item = {props.leader}\r\n                    isLoading={props.leadersLoading}\r\n                    errMess={props.leadersErrMess}\r\n                    />\r\n                </div>\r\n             </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n    function RenderMenuItem({dish,onClick}) {\r\n        return(\r\n            <Card  >\r\n                <Link to= {`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" object src={baseUrl + dish.image} alt={dish.name}/>\r\n                    <CardImgOverlay>\r\n                        <CardTitle> {dish.name} </CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n        \r\n        const menu = props.dishes.dishes.map((dish)=> {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                   <RenderMenuItem dish={dish} /> \r\n                </div>\r\n            );\r\n\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return (\r\n                <div className =\"container\">\r\n                    <div className =\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess){\r\n            return(\r\n            <div className =\"container\">\r\n                <div className =\"row\">                    \r\n                        <h4>{props.dishes.errMess}</h4>                   \r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className = 'container'> \r\n                    <div className='row'>\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to='/home'>Home </Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>\r\n                                Menu \r\n                            </BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className = \"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n\r\nexport default Menu;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nfunction About(props) {\r\n\r\n    function RenderLeader({item}) {\r\n        \r\n        \r\n        \r\n        return(\r\n            <div key = {item.id}  className=\"col-12 mt-5 \">       \r\n                    <Fade in>\r\n                        <Media className =\"mt-3\"> \r\n                            <Media left >\r\n                                <Media object src={baseUrl + item.image} alt={item.name} className=\"mt-3 mr-5\" />\r\n                            </Media>\r\n                            <Media  body>\r\n                                <Media heading> {item.name} </Media>\r\n                                {item.designation}\r\n                                <p className=\"mt-3\"> {item.description} </p>\r\n                            </Media>\r\n                        </Media>\r\n                    </Fade>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    const leaders = props.leaders.leaders.map( (leader) => {              \r\n        return (\r\n                <div key = {leader.id} >\r\n                   <RenderLeader item = {leader}\r\n                    />   \r\n                </div>\r\n         \r\n        );\r\n    });\r\n\r\n        if (props.leaders.isLoading) {\r\n            return (\r\n                <div className =\"container\">\r\n                    <div className =\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.leaders.errMess){\r\n            return(\r\n            <div className =\"container\">\r\n                <div className =\"row\">                    \r\n                        <h4>{props.leaders.errMess}</h4>                   \r\n                </div>\r\n            </div>\r\n            );\r\n        } \r\n\r\n    \r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n\r\n                <Stagger in>\r\n                    <Media list>    \r\n                        {leaders}\r\n                    </Media>  \r\n                </Stagger>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React , {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row  } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Control, Form, Errors} from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length<=len);\r\nconst minLength = (len) => (val) => (val) && (val.length>=len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component  {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);   \r\n    }\r\n\r\n    handleSubmit(values){\r\n        console.log(\"Current State is:\" + JSON.stringify(values));\r\n        alert(\"Current State is:\" + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, \r\n                                values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();   \r\n    }\r\n\r\n   \r\n   \r\n\r\n    \r\n\r\n    render() {\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n                <div className='row'>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/home'>Home </Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            Contact Us \r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className = \"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12- col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"firstname\" md={2}>First Name </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                    placeholder=\"First Name\"\r\n                                    className=\"form-control\"\r\n                                    validators ={{\r\n                                        required, minLength:minLength(3), maxLength:maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required:'Required',\r\n                                            minLength:'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"lastname\" md={2}>Last Name </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Last Name\"\r\n                                    validators ={{\r\n                                        required, minLength:minLength(3), maxLength:maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required:'Required',\r\n                                            minLength:'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"telnum\" md={2}>Contact Tel. </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Tel. Number\"\r\n                                    validators ={{\r\n                                        required, minLength:minLength(3), maxLength:maxLength(15), isNumber\r\n                                    }}\r\n                                    /> \r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required:'Required',\r\n                                            minLength:'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />                                   \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"email\" md={2}>Email </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\"\r\n                                    validators ={{\r\n                                        required, validEmail\r\n                                    }}\r\n                                   />\r\n                                   <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required:'Required',\r\n                                            validEmail: 'Invalid Email Address'                            \r\n                                        }}\r\n                                    />                                        \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:6, offset:2}}>\r\n                                    <div className=\"form-check\" >\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                            className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong> May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size:3, offset:1}}>\r\n                                    <Control.select model =\".contactType\" name =\"contactType\"\r\n                                    className=\"form-control\">\r\n                                        <option>Tel. </option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>  \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"message\" md={2}>Your Feedback </Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                    rows=\"12\"\r\n                                    className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>   \r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport {Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\nimport {Button, Modal, ModalHeader, ModalBody,\r\n    Label, Col, Row} from 'reactstrap';\r\nimport {Loading}  from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n\r\n    function RenderDish({dish}) {\r\n        if(dish!= null) {\r\n            return (\r\n                    <FadeTransform in\r\n                    transformProps = {{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                        <Card>\r\n                            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                            <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </FadeTransform>\r\n               \r\n            );\r\n        }\r\n        else {\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const required = (val) => val && val.length;\r\n    const maxLength = (len) => (val) => !(val) || (val.length<=len);\r\n    const minLength = (len) => (val) => (val) && (val.length>=len);\r\n\r\n    class CommentForm extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.state= {\r\n                isModalOpen:false\r\n            };\r\n            this.toggleModal = this.toggleModal.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this); \r\n        }\r\n\r\n        toggleModal(){\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n\r\n        handleSubmit(values){\r\n            this.toggleModal();   \r\n            this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        }\r\n\r\n    \r\n        render() { \r\n            \r\n            return(\r\n            <>\r\n            <Button outline onClick = {this.toggleModal}>\r\n                <span className= \"fa fa-pencil fa-lg\"> Submit Comment  </span>\r\n            </Button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n            <ModalBody>\r\n                <LocalForm onSubmit = {this.handleSubmit}> \r\n                    <Row className=\"form-group\">\r\n                        <Col md={12}>\r\n                            <Label htmlfor=\"rating\" >Rating</Label>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <Control.select model=\".rating\" id=\"rating\" name=\"rating\" \r\n                            className=\"form-control\" >\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                            </Control.select>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlfor=\"author\" md={12}>Your Name </Label>\r\n                            <Col >\r\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                placeholder=\"Your Name\"\r\n                                className=\"form-control\"\r\n                                validators ={{\r\n                                    required, minLength:minLength(3), maxLength:maxLength(15)\r\n                                }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required:'Required',\r\n                                        minLength:'Must be greater than 3 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlfor=\"comment\" md={12}>Comment </Label>\r\n                        <Col md={12}>\r\n                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                            rows=\"6\"\r\n                            className=\"form-control\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"form-group\" >\r\n                        <Col md={{size:12}}>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                                Submit\r\n                            </Button>  \r\n                        </Col>   \r\n                    </Row>\r\n                    \r\n                </LocalForm>\r\n            </ModalBody>\r\n        </Modal>\r\n            </>\r\n        ); }      \r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}){\r\n       \r\n        if(comments !== null){\r\n            const commentView = comments.map( (c) => \r\n                <Fade in>\r\n                    <li key={c.id}>\r\n                        {c.comment}\r\n                        <br/>\r\n                        {'--' + c.author + ','}\r\n                        &nbsp; &nbsp;\r\n                        {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(c.date)))}\r\n                    </li>\r\n                </Fade>\r\n                )\r\n         return(\r\n                <div>\r\n                    <h4>Comments</h4>  \r\n                    <ul className = \"list-unstyled\">\r\n                        <Stagger in>\r\n                            {commentView}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment}/>   \r\n                    <Row>&nbsp;</Row>               \r\n                </div>        \r\n             \r\n         );\r\n       }else{\r\n        return(\r\n            <div></div>\r\n        );\r\n    \r\n       }\r\n    \r\n    }\r\n\r\n    const DishDetail= (props) => {\r\n        if (props.isLoading) {\r\n            return (\r\n                <div className =\"container\">\r\n                    <div className =\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess){\r\n            return(    \r\n                <div className =\"container\">\r\n                    <div className =\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null)\r\n            return (\r\n                    <div className=\"Container\">\r\n                        <div className='row'>\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem>\r\n                                    <Link to='/menu'>Menu </Link>\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem active>\r\n                                    {props.dish.name} \r\n                                </BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <div className = \"col-12\">\r\n                                <h3>{props.dish.name}</h3>\r\n                                <hr />\r\n                            </div>\r\n                        </div>\r\n                        <div className =\"row\">\r\n                            <div className=\"col-12  col-md-5 m-1\">\r\n                                <RenderDish dish={props.dish} />\r\n                            </div>\r\n                            <div className=\"col-12 col-md-5 \">\r\n                                <RenderComments comments = {props.dish?props.comments:null}\r\n                                postComment = {props.postComment}\r\n                                dishId={props.dish.id} />   \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\nexport default DishDetail;","import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand,Nav,  Collapse, NavItem, Jumbotron, NavbarToggler,\r\n        Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input,\r\n        Label} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            isNavOpen: false,\r\n            isModalOpen:false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \"Password: \" + this.password.value \r\n             + \"Remember: \" + this.remember.checked);\r\n        event.preventDefault(); \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <Navbar dark expand= \"md\" >\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" \r\n                            alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen= {this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/home\">\r\n                                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                    <span className=\"fa fa-info fa-lg\"></span> About us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                    <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className =\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick = {this.toggleModal}>\r\n                                    <span className= \"fa fa-sign-in fa-lg\"> Login  </span>\r\n                                </Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>              \r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className= \"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World´s best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses! </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit = {this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor =\"username\"> Username </Label>\r\n                                <Input type=\"text\"  id=\"username\" name=\"username\"\r\n                                innerRef={(input)=> this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor =\"password\"> Password </Label>\r\n                                <Input type=\"password\"  id=\"username\" name=\"password\"\r\n                                innerRef={(input)=> this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" \r\n                                    innerRef={(input)=> this.remember = input}/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" className=\"bg-primary\"> Login </Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to =\"/home\">Home</Link></li>\r\n                        <li><Link to =\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to =\"/menu\">Menu</Link></li>\r\n                        <li><Link to =\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\n\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, \r\n                    agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname : lastname,\r\n        telnum: telnum,\r\n        email : email,\r\n        agree : agree,\r\n        contactType : contactType,\r\n        message : message\r\n\r\n\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then( response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ': ' + response.statusText)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error (error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .then(response => alert('Thank you for your feedback!\\n' + JSON.stringify(response)))\r\n    .catch(error=> {console.log('Post Feedback', error.message)\r\n    alert ('Your feedback could not be posted\\n Error ' + error.message)})\r\n}\r\n\r\n\r\n\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating : rating,\r\n        author: author,\r\n        comment : comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then( response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error' + response.status + ': ' + response.statusText)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error (error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error=> {console.log('Post comments', error.message)\r\n        alert ('Your comment could not be posted\\n Error ' + error.message)})\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    \r\n    return  fetch(baseUrl + 'dishes')\r\n        .then( response => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error (error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n})\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then( response => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error (error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n})\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n    \r\n    return fetch(baseUrl + 'promotions')\r\n        .then( response => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error (error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n    \r\n    return fetch(baseUrl + 'leaders')\r\n        .then( response => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error (error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const ADD_FEEDBACKS = 'ADD_FEEDBACKS';\r\nexport const FEEDBACKS_FAILED = 'FEEDBACKS_FAILED';\r\n\r\n","import React, {Component} from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStatetoProps = state => {\r\n    return{\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      feedbacks: state.feedbacks,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n    }     \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch (postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname, lastname, telnum, email, \r\n    agree, contactType, message) => dispatch (postFeedback(firstname, lastname, telnum, email, \r\n      agree, contactType, message)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders: () => {dispatch(fetchLeaders())}\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n\r\n\r\n\r\n    componentDidMount () {\r\n      this.props.fetchDishes();\r\n      this.props.fetchComments();\r\n      this.props.fetchPromos();\r\n      this.props.fetchLeaders()\r\n    }\r\n\r\n    \r\n\r\n    onDishSelect(dishId) {\r\n        this.setState({selectedDish:dishId});\r\n    }\r\n\r\n    render(){ \r\n      \r\n     const HomePage = () => {\r\n       return (\r\n         <Home dish ={this.props.dishes.dishes.filter((dish)=> dish.featured)[0]}\r\n              dishesLoading = {this.props.dishes.isLoading}\r\n              dishesErrMess ={this.props.dishes.errMess}\r\n              promotion ={this.props.promotions.promotions.filter((promo)=> promo.featured)[0]}\r\n              promosLoading = {this.props.promotions.isLoading}\r\n              promosErrMess ={this.props.promotions.errMess}\r\n              leader ={this.props.leaders.leaders.filter((leader)=> leader.featured)[0]}\r\n              leadersLoading = {this.props.leaders.isLoading}\r\n              leadersErrMess ={this.props.leaders.errMess} />\r\n       );\r\n     } \r\n\r\n     const DishWithId = ({match}) => {\r\n       return (\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish)=> dish.id === parseInt(match.params.dishId,10))[0]} \r\n            isLoading = {this.props.dishes.isLoading}\r\n            errMess ={this.props.dishes.errMess}\r\n            comments = {this.props.comments.comments.filter((comment)=> comment.dishId ===parseInt(match.params.dishId,10))}\r\n            commentsErrMess ={this.props.comments.errMess}\r\n            postComment = {this.props.postComment}\r\n          />\r\n       );\r\n     }\r\n\r\n    return (\r\n    <div>\r\n      <Header />\r\n      <TransitionGroup>\r\n        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n          <Switch>\r\n            <Route path =\"/home\" component ={HomePage} />\r\n            <Route exact path =\"/aboutus\" component ={() => <About leaders={this.props.leaders}/>} />\r\n            <Route exact path =\"/menu\" component = {()=> <Menu dishes={this.props.dishes} />} />\r\n            <Route path =\"/menu/:dishId\" component = {DishWithId} />\r\n            <Route exact path =\"/contactus\" component= {()=> <Contact resetFeedbackForm ={this.props.resetFeedbackForm}\r\n                                                              resetFeedback = {this.props.resetFeedback}  postFeedback ={this.props.postFeedback}  />} />\r\n            <Redirect to =\"/home\" />\r\n          </Switch>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n      <Footer />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStatetoProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state={\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state,isLoading: false, errMess:null, dishes:action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state,isLoading: true, errMess:null, dishes:[]};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state,isLoading: false, errMess:action.payload, dishes:[] };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state= {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state,isLoading: false, errMess:null, comments:action.payload};\r\n        \r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state,isLoading: false, errMess:action.payload, comments:[]};\r\n        \r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Promotions = (state={\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state,isLoading: false, errMess:null, promotions:action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state,isLoading: true, errMess:null, promotions:[]};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state,isLoading: false, errMess:action.payload, promotions:[] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\n\r\nexport const Leaders = (state={\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state,isLoading: false, errMess:null, leaders:action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state,isLoading: true, errMess:null, leaders:[]};\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state,isLoading: false, errMess:action.payload, leaders:[] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel',\r\n    message:''\r\n}","import React, {Component} from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n   \r\n    render(){ return (\r\n    \r\n    <Provider store ={store}>\r\n      <BrowserRouter>\r\n        <div className =\"App\">\r\n          <Main />\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport {Dishes} from './dishes';\r\nimport {Comments} from './comments';\r\nimport {Promotions} from './promotions';\r\nimport {Leaders} from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore (\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms ({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css'\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n \r\n    <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}